#ifndef FM_PART_ALGORITHM_H
#define FM_PART_ALGORITHM_H

/***************************************************************
* Class Definitions
****************************************************************/


/***************************************************************
* Function Declarations
****************************************************************/

/***************************************************************************
* Function Name: CalculateNodeGain
****************************************************************************/
void InitializeNodeGain();

/***************************************************************************
* Function Name: FM_Alogrithm_Core
****************************************************************************/
FM_RESULT FM_Algorithm_Core();

/***************************************************************************
* Function Name: SwapPartition
****************************************************************************/
int SwapPartition_and_Check_Area(NODE *node);

/***************************************************************************
* Function Name: FindMaxElement_MAP
****************************************************************************/
NODE * FindMaxElement_MAP();

/***************************************************************************
* Function Name: Recalcualte_NodeGain
****************************************************************************/
void Recalculate_NodeGain(NODE* node_current);

/***************************************************************************
* Function Name: UpdateCutSet
****************************************************************************/
void UpdateCutSet();

/*********************************************************************************
* Function Name: Update_Area_For_Each_Partition
**********************************************************************************/
FM_RESULT Update_Area_For_Each_Partition(NODE *movedNode, NODE_PART_NAME new_Node_part);

/*********************************************************************************
* Function Name: CheckAreaContraint
**********************************************************************************/
bool CheckAreaContraint();

/***************************************************************************
* Function Name: Save_CurrentData_State
****************************************************************************/
void Save_CurrentData_State(int min_cut, NETS * savedNets, NODE *savedNode);

/***************************************************************************
* Function Name: SetupAreaConstraint
****************************************************************************/
void SetupAreaConstraint();

#endif
